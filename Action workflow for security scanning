# .github/workflows/security-scans.yml
name: Security Scans

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sundays

jobs:
  sast-scan:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit semgrep safety
          
      - name: Run Bandit scan
        run: bandit -r ./src -f json -o bandit-results.json
        
      - name: Run Semgrep scan
        run: semgrep --config=p/owasp-top-ten ./src --json > semgrep-results.json
        
      - name: Run dependency scan
        run: safety check -r requirements.txt --json > safety-results.json
        
      - name: Upload scan results
        uses: actions/upload-artifact@v3
        with:
          name: sast-results
          path: |
            bandit-results.json
            semgrep-results.json
            safety-results.json

  dast-scan:
    name: Dynamic Application Security Testing
    runs-on: ubuntu-latest
    needs: sast-scan
    steps:
      - uses: actions/checkout@v3
      
      - name: Build application
        run: docker-compose up -d
        
      - name: Wait for application to start
        run: sleep 30
        
      - name: Run ZAP scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          target: 'http://localhost:8000'
          
      - name: Generate DAST report
        run: python ./scripts/report-generator.py --type dast
          
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Docker image
        run: docker build -t security-pipeline:latest .
        
      - name: Run Trivy scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'security-pipeline:latest'
          format: 'json'
          output: 'trivy-results.json'
          severity: 'CRITICAL,HIGH'
          
      - name: Upload scan results
        uses: actions/upload-artifact@v3
        with:
          name: container-scan-results
          path: trivy-results.json

  iac-security:
    name: Infrastructure as Code Security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true
          format: json
          
      - name: Run checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/terraform
          framework: terraform
          output_format: json
